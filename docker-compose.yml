version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: aphrodite_postgres_db
    restart: always # 确保容器总是在运行状态
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - aphrodite-postgres-data:/var/lib/postgresql/data
    networks:
      - aphrodite-net

  frontend:
    build:
      context: ./AphroditeVue
    container_name: aphrodite_vue_frontend
    ports:
      - "8888:80"
    networks:
      - aphrodite-net
    depends_on:
      - gateway

  gateway:
    build:
      context: ./AphroditeSpringBoot/ams-gateway
    container_name: aphrodite_gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - login
      - db
      - register
    networks:
      - aphrodite-net

  login:
    build:
      context: ./AphroditeSpringBoot/ams-login
    container_name: aphrodite_login_service
    restart: always
    environment:
      SERVER_PORT: 8081
      SPRING_PROFILES_ACTIVE: docker
      # 注入数据库连接信息
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db 
    networks:
      - aphrodite-net

  register:
    build:
      context: ./AphroditeSpringBoot/ams-register
    container_name: aphrodite_register_service
    restart: always
    environment:
      SERVER_PORT: 8082
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db 
    networks:
      - aphrodite-net

networks:
  aphrodite-net:
    driver: bridge

volumes:
  aphrodite-postgres-data:
